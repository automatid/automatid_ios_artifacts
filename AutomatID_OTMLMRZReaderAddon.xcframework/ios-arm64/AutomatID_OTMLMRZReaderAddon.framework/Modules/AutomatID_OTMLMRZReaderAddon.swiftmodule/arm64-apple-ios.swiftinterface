// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AutomatID_OTMLMRZReaderAddon
import AVFoundation
import Accelerate
@_exported import AutomatID_OTMLMRZReaderAddon
import Foundation
import GPUImage
import MLKitTextRecognition
import MLKitVision
import Swift
import UIKit
import Vision
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc(MRZFrenchIdCard) open class MRZFrenchIdCard : AutomatID_OTMLMRZReaderAddon.MRZParser {
  @objc override public init(scan: Swift.String, debug: Swift.Bool = false)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(MRZModel) open class MRZModel : ObjectiveC.NSObject {
  @objc public var documentType: Swift.String
  @objc public var documentSubType: Swift.String
  @objc public var countryCode: Swift.String
  @objc public var passportNumber: Swift.String
  @objc public var sex: Swift.String
  @objc public var nationality: Swift.String
  @objc public var dateOfBirth: Foundation.Date?
  @objc public var expirationDate: Foundation.Date?
  @objc public var dateOfBirthString: Swift.String
  @objc public var expirationDateString: Swift.String
  @objc public var lastName: Swift.String
  @objc public var firstName: Swift.String
  @objc public var rawMRZ: Swift.String
  @objc public var personalNumber: Swift.String
  @objc override dynamic open var description: Swift.String {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
@objc(MRZParser) open class MRZParser : ObjectiveC.NSObject {
  @objc public var rawMRZ: Swift.String
  @objc public var mrz: AutomatID_OTMLMRZReaderAddon.MRZModel
  @objc public init(scan: Swift.String, debug: Swift.Bool = false)
  @objc override dynamic open var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(MRZTD1) open class MRZTD1 : AutomatID_OTMLMRZReaderAddon.MRZParser {
  @objc override public init(scan: Swift.String, debug: Swift.Bool = false)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(MRZTD3) open class MRZTD3 : AutomatID_OTMLMRZReaderAddon.MRZParser {
  @objc override public init(scan: Swift.String, debug: Swift.Bool = false)
  @objc deinit
}
@objc public enum MRZType : Swift.Int {
  case auto
  case td1
  case td3
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc(PassportScanner) open class PassportScanner : ObjectiveC.NSObject {
  @objc public var debug: Swift.Bool
  @objc public var accuracy: Swift.Float
  @objc public var mrzType: AutomatID_OTMLMRZReaderAddon.MRZType
  @objc public var tesseractTrainedDataAbsolutePath: Swift.String?
  @objc public var setupCompleted: Swift.Bool
  @objc public func setup()
  @objc public func clarify(sourceImage: UIKit.UIImage) -> UIKit.UIImage
  @objc public func completionedParseImage(sourceImage: UIKit.UIImage, completion: @escaping (AutomatID_OTMLMRZReaderAddon.MRZModel?) -> Swift.Void)
  @objc override dynamic public init()
  @objc deinit
}
extension AutomatID_OTMLMRZReaderAddon.MRZType : Swift.Equatable {}
extension AutomatID_OTMLMRZReaderAddon.MRZType : Swift.Hashable {}
extension AutomatID_OTMLMRZReaderAddon.MRZType : Swift.RawRepresentable {}
