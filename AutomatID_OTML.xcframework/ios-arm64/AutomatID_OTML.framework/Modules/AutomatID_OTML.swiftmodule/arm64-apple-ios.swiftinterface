// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AutomatID_OTML
@_exported import AutomatID_OTML
import AutomatID_OTMLCore
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @objcMembers public class AutomatID_OTMLPushNotificationBlacklistRules : ObjectiveC.NSObject, AutomatID_OTMLCore.AutomatID_OTMLRestartAppAwareProtocol {
  @objc public class func getInstance() -> AutomatID_OTML.AutomatID_OTMLPushNotificationBlacklistRules
  @objc override dynamic public init()
  @objc public func willRestart()
  @objc public func cleanBlacklist()
  @objc public func blackListAll()
  public func addRuleToBlacklist(rule: AutomatID_OTML.AutomatID_OTMLPushNotificationBlacklistRule)
  @objc public func removeRuleFromBlacklistWithId(id: Swift.String)
  @objc public func checkIfNotificationIsBlacklisted(payload: [Swift.AnyHashable : Swift.AnyHashable]) -> Swift.Bool
  @objc deinit
}
public struct AutomatID_OTMLPushNotificationBlacklistRule {
}
@objc @objcMembers public class AutomatID_OTMLPushNotificationActionCommand : AutomatID_OTML.AutomatID_OTMLActionCommandSet {
  @objc public func handleKeys() -> Swift.Array<Swift.String>
  @objc override dynamic public func actionCommands() -> [Swift.AnyHashable : Any]!
  @objc override dynamic public init!()
  @objc public func newCommandDictionary() -> [Swift.String : AutomatID_OTML.AutomatID_OTMLActionCommand]
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class AutomatID_OTMLAddPushNotificationBlacklistActionCommand : AutomatID_OTML.AutomatID_OTMLActionCommand {
  @objc override dynamic public func execute(_ aAction: AutomatID_OTML.AutomatID_OTMLResolvedAction!, on aNestingVC: AutomatID_OTML.AutomatID_OTMLViewController!)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class OTMLRemovePushNotificationBlacklistActionCommand : AutomatID_OTML.AutomatID_OTMLActionCommand {
  @objc override dynamic public func execute(_ aAction: AutomatID_OTML.AutomatID_OTMLResolvedAction!, on aNestingVC: AutomatID_OTML.AutomatID_OTMLViewController!)
  @objc override dynamic public init()
  @objc deinit
}
@objc @objcMembers @_Concurrency.MainActor(unsafe) public class AutomatID_OTMLSliderButtonComponent : AutomatID_OTML.AutomatID_OTMLComponent, UIKit.UIGestureRecognizerDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func contentHeightWrapped() -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didTrigger(_ aTrigger: Swift.String!)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func handleConcreteComponentParameters(_ updParams: [Swift.AnyHashable : Any]!) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func updateFramesInView()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init!(model aModel: AutomatID_OTMLModels.AutomatID_OTMLComponentModel!)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init!(otmlComponent aComponent: AutomatID_OTML.AutomatID_OTMLComponent!)
  @objc @_Concurrency.MainActor(unsafe) public func createView() -> UIKit.UIView
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func newContentView(withFrame cViewFrame: CoreFoundation.CGRect) -> UIKit.UIView!
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class OTMPNetworkHmacSupporter : ObjectiveC.NSObject {
  @objc public static func elaborateBodyString(with bodyString: Swift.String) -> Swift.String
  @objc override dynamic public init()
  @objc deinit
}
