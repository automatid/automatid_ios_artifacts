// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 effective-4.2 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 4.2 -enforce-exclusivity=checked -O -module-name OTML
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import OTML
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@objc @_inheritsConvenienceInitializers @objcMembers public class OTMLPushNotificationBlacklistRules : ObjectiveC.NSObject, OTMLCore.OTMLRestartAppAwareProtocol {
  @objc public class func getInstance() -> OTML.OTMLPushNotificationBlacklistRules
  @objc override dynamic public init()
  @objc public func willRestart()
  @objc public func cleanBlacklist()
  @objc public func blackListAll()
  public func addRuleToBlacklist(rule: OTML.OTMLPushNotificationBlacklistRule)
  @objc public func removeRuleFromBlacklistWithId(id: Swift.String)
  @objc public func checkIfNotificationIsBlacklisted(payload: [Swift.AnyHashable : Swift.AnyHashable]) -> Swift.Bool
  @objc deinit
}
public struct OTMLPushNotificationBlacklistRule {
}
@objc @objcMembers public class OTMLPushNotificationActionCommand : OTML.OTMLActionCommandSet {
  @objc public func handleKeys() -> Swift.Array<Swift.String>
  @objc override dynamic public func actionCommands() -> [Swift.AnyHashable : Any]!
  @objc override dynamic public init!()
  @objc public func newCommandDictionary() -> [Swift.String : OTML.OTMLActionCommand]
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class OTMLAddPushNotificationBlacklistActionCommand : OTML.OTMLActionCommand {
  @objc override dynamic public func execute(_ aAction: OTML.OTMLResolvedAction!, on aNestingVC: OTML.OTMLViewController!)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class OTMLRemovePushNotificationBlacklistActionCommand : OTML.OTMLActionCommand {
  @objc override dynamic public func execute(_ aAction: OTML.OTMLResolvedAction!, on aNestingVC: OTML.OTMLViewController!)
  @objc override dynamic public init()
  @objc deinit
}
@objc @objcMembers @_Concurrency.MainActor(unsafe) public class OTMLSliderButtonComponent : OTML.OTMLComponent, UIKit.UIGestureRecognizerDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func contentHeightWrapped() -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didTrigger(_ aTrigger: Swift.String!)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func handleConcreteComponentParameters(_ updParams: [Swift.AnyHashable : Any]!) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func updateFramesInView()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init!(model aModel: OTMLModels.OTMLComponentModel!)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init!(otmlComponent aComponent: OTML.OTMLComponent!)
  @objc @_Concurrency.MainActor(unsafe) public func createView() -> UIKit.UIView
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func newContentView(withFrame cViewFrame: CoreFoundation.CGRect) -> UIKit.UIView!
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class OTMPNetworkHmacSupporter : ObjectiveC.NSObject {
  @objc public static func elaborateBodyString(with bodyString: Swift.String) -> Swift.String
  @objc override dynamic public init()
  @objc deinit
}
